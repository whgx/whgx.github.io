<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>问题总结</title>
    <url>/2020/07/25/2ZTgQPbdp/</url>
    <content><![CDATA[<blockquote>
<p>线上同事发现了一个问题，更新常量类里面的常量后发现没出现效果，反编译后看结果没变….后续查资料结果：<br>程序中使用的各种常量用一个类来统一管理，类似：</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConst</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STR_1 = <span class="string">"String1"</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STR_2 = <span class="string">"String2"</span>;  </span><br><span class="line">    ......  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在某些逻辑代码段里使用了这些常量。这样做可以便于管理常量，避免了大量的magic number/text，在修改常量内容时只需改这一个类就行了，但有时候会奇怪地发现，重新编译打包的程序依旧我行我素，并没有即时反应我们对常量的修改，这是何解呢？<br>在之前的《JVM学习笔记三–类的初始化》中我曾提到，静态常量（即用 static final 修饰的变量）是编译时常量，当一个class文件编译完毕，它内部使用到的所有常量的具体值就已经确定了，不能想当然地以为它在运行时并连接常量管理类之 后才会以引用方式使用常量。比如下面这段代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> AppConst;  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SomeService</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serviceJob1</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(AppConst.STR_1);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>类SomeService使用了STR_1这个常量，表面上是通过AppConst类取得的这个值，实际上在SomeService被编译后，其代码其实变成了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SomeService</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serviceJob1</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">"String1"</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里面根本没有AppConst什么事，所以你即使修改了AppConst的相关常量，令STR_1 = “NotString1”,SomeService可能依然会打印”String1”,因为SomeService的代码没有任何修改，在增量编译的情况 下，它的class文件不会被重新编译。<br>明白了上面这些，大致就知道怎么办了，我的方法有两个：</p>
<ol>
<li>原始条件下，删除class文件后手动重编译。</li>
<li>使用IDE的时候， 先对SomeService做一个细微修改并保存（会自动编译），然后再修改回来并保存（再次自动编译）。如此class文件就会被更新了。<br>是这样的，单纯的修改静态变量是没用的，还要重新编辑所有引用静态变量的类，不然不会生效的。<br>改成 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConst</span> </span>&#123;    </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">getString2</span><span class="params">()</span></span>&#123;   </span><br><span class="line">              <span class="keyword">return</span> <span class="string">"String2"</span>;    </span><br><span class="line">  &#125;   </span><br><span class="line">  ......    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
就可以仅仅修改并编译一个类就行了 .<br>从根本上来解决此问题得这么做，最简单。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConst</span> </span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STR_1 = <span class="keyword">new</span> String(<span class="string">"String1"</span>);     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STR_2 = <span class="keyword">new</span> String(<span class="string">"String2"</span>);     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> number1=<span class="keyword">new</span> Integer(<span class="number">123</span>);   </span><br><span class="line">    ......     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
反编译，你会发现在引用此静态类属性的时候，引用代码不是直接用具体值替代，而还是源代码里的引用。<blockquote>
<p>一句话总结，在静态类里定义的静态属性，坚决不用引用类型，而需要用对象类型。</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL数据库统计信息查询</title>
    <url>/2020/07/25/7v_zfrTYs/</url>
    <content><![CDATA[<h4 id="数据库表数量"><a href="#数据库表数量" class="headerlink" title="数据库表数量"></a>数据库表数量</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#查询MySQL服务中数据库表数据量</span><br><span class="line"><span class="function">SELECT <span class="title">COUNT</span><span class="params">(*)</span> TABLES, table_schema FROM information_schema.TABLES    GROUP BY table_schema</span>;</span><br><span class="line">#查询指定数据库表数量</span><br><span class="line"><span class="function">SELECT <span class="title">COUNT</span><span class="params">(*)</span> TABLES, table_schema FROM information_schema.TABLES   WHERE table_schema </span>= <span class="string">'szdb'</span></span><br></pre></td></tr></table></figure>

<h4 id="查询数据库字段"><a href="#查询数据库字段" class="headerlink" title="查询数据库字段"></a>查询数据库字段</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#查询一个表中有多少字段</span><br><span class="line"><span class="function">SELECT <span class="title">COUNT</span><span class="params">(*)</span> FROM information_schema. COLUMNS WHERE table_schema </span>= <span class="string">'szdb'</span> AND table_name = <span class="string">'SystemLog'</span>;</span><br><span class="line">#查询一个数据库中有多少字段</span><br><span class="line"><span class="function">SELECT <span class="title">COUNT</span><span class="params">(column_name)</span> FROM information_schema.COLUMNS WHERE TABLE_SCHEMA </span>= <span class="string">'szdb'</span>;</span><br><span class="line">#查询数据库中所以表、字段、字段类型、注释等信息</span><br><span class="line">SELECT TABLE_NAME, column_name, DATA_TYPE, column_comment FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = <span class="string">'szdb'</span> ;</span><br></pre></td></tr></table></figure>

<h4 id="查询数据库中持久化的数据量"><a href="#查询数据库中持久化的数据量" class="headerlink" title="查询数据库中持久化的数据量"></a>查询数据库中持久化的数据量</h4><blockquote>
<p>MySQL中有一个名为 information_schema 的数据库，在该库中有一个 TABLES 表，这个表主要字段分别：TABLE_SCHEMA : 数据库名，TABLE_NAME：表名，ENGINE：所使用的存储引擎，TABLES_ROWS：记录数，DATA_LENGTH：数据大小，INDEX_LENGTH：索引大小use information_schema；统计数据主要使用的就是这张表了。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#统计数据库中每个表保存的数据量</span><br><span class="line">use information_schema;</span><br><span class="line">SELECT TABLE_NAME, (DATA_LENGTH/<span class="number">1024</span>/<span class="number">1024</span>) as DataM ,(INDEX_LENGTH/<span class="number">1024</span>/<span class="number">1024</span>) as IndexM,((DATA_LENGTH+INDEX_LENGTH)/<span class="number">1024</span>/<span class="number">1024</span>) as AllM,TABLE_ROWS FROM TABLES WHERE TABLE_SCHEMA = <span class="string">'szdb'</span></span><br><span class="line"></span><br><span class="line">#查询每张表数量</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'szdb'</span> order by table_rows desc;</span><br><span class="line"></span><br><span class="line">#数据库总数量</span><br><span class="line"><span class="function">SELECT <span class="title">sum</span><span class="params">(table_rows)</span> from tables where TABLE_SCHEMA </span>= <span class="string">'szdb'</span> order by table_rows desc;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MYSQL</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx监控工具-GoAccess</title>
    <url>/2020/07/25/BpGxZ4yx7/</url>
    <content><![CDATA[<h5 id="Why-GoAccess"><a href="#Why-GoAccess" class="headerlink" title="Why GoAccess?"></a>Why GoAccess?</h5><blockquote>
<p>GoAccess 被设计成快速的并基于终端的日志分析工具。其核心理念是不需要通过 Web 浏览器就能快速分析并实时查看 Web 服务器的统计数据(这对于需要使用 SSH 来对访问日志进行快速分析或者就是喜欢在终端环境下工作的人来说是超赞的)。<br>终端输出仅仅是默认的输出方式，GoAccess 还支持生成完整的实时 HTML 报告(这对分析、监控以及数据可视化都是极好的)，以及 JSON 和 CSV 格式的报告。</p>
</blockquote>
<h5 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h5><blockquote>
<p><a href="https://goaccess.io/download" target="_blank" rel="noopener">https://goaccess.io/download</a></p>
</blockquote>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><h6 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">yum install glib2 glib2-devel GeoIP-devel  ncurses-devel zlib zlib-develyum install gcc -y</span><br><span class="line">yum -y install GeoIP-update</span><br><span class="line">yum install goaccess</span><br><span class="line">#修改/etc/nginx/nginx.conf文件的日志存储格式</span><br><span class="line">log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] requesthost:"$http_host"; "$request" requesttime:"$request_time"; '</span></span><br><span class="line">        <span class="string">'$status $body_bytes_sent "$http_referer" - $request_body'</span></span><br><span class="line">        <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;        </span><br><span class="line">#修改文件/etc/goaccess.conf改成goaccess格式标准对应为</span><br><span class="line">time-format %T</span><br><span class="line">date-format %d/%b/%Y</span><br><span class="line">log-format %h - %^ [%d:%t %^] requesthost:<span class="string">"%v"</span>; <span class="string">"%r"</span> requesttime:<span class="string">"%T"</span>; %s %b <span class="string">"%R"</span> - %^<span class="string">"%u"</span></span><br><span class="line">#测试生成页面</span><br><span class="line">goaccess -f /<span class="keyword">var</span>/log/nginx/access.log -c -a&gt;/usr/share/nginx/html/go.html</span><br></pre></td></tr></table></figure>

<h6 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#yum安装依赖包</span><br><span class="line">yum install glib2 glib2-devel GeoIP-devel  ncurses-devel zlib zlib-devel</span><br><span class="line">yum install gcc -y</span><br><span class="line">rpm -Uvh https:<span class="comment">//dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</span></span><br><span class="line">yum -y install GeoIP-update</span><br><span class="line"></span><br><span class="line">#下载goaccess源码包，并解压编译安装</span><br><span class="line">wget https:<span class="comment">//tar.goaccess.io/goaccess-1.2.tar.gz</span></span><br><span class="line">tar xzvf goaccess-<span class="number">1.2</span>.tar.gz</span><br><span class="line">cd goaccess-<span class="number">1.2</span>/./configure --enable-geoip --enable-utf8make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#修改/etc/nginx/nginx.conf文件的日志存储格式</span><br><span class="line">log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] requesthost:"$http_host"; "$request" requesttime:"$request_time"; '</span></span><br><span class="line">        <span class="string">'$status $body_bytes_sent "$http_referer" - $request_body'</span>                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;       </span><br><span class="line">#修改文件/usr/local/etc/goaccess.conf改成goaccess格式标准对应为</span><br><span class="line">time-format %T</span><br><span class="line">date-format %d/%b/%Y</span><br><span class="line">log-format %h - %^ [%d:%t %^] requesthost:<span class="string">"%v"</span>; <span class="string">"%r"</span> requesttime:<span class="string">"%T"</span>; %s %b <span class="string">"%R"</span> - %^<span class="string">"%u"</span></span><br><span class="line">#测试生成页面</span><br><span class="line">goaccess -f /<span class="keyword">var</span>/log/nginx/access.log -c -a&gt;/usr/share/nginx/html/go.html</span><br><span class="line">#后台实时生成数据到goaccess页面</span><br><span class="line">/usr/local/bin/goaccess /<span class="keyword">var</span>/log/nginx/access.log -o /usr/share/nginx/html/go.html  --real-time-html &amp;</span><br></pre></td></tr></table></figure>

<h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote>
<p>goaccess [ -b ][ -s ][ -e IP_ADDRESS][ - a ] &lt;-f log_file &gt;<br>参数说明：<br>    -f – 日志文件名<br>    -b – 开启流量统计，如果希望加快分析速度不建议使用该参数<br>    -s – 开启HTTP响应代码统计<br>    -a – 开启用户代理统计<br>    -e – 开启指定IP地址统计，默认禁用<br>    -p -指定goacces用户配置文件路径</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">goaccess access2.log -p /etc/goaccess/goaccess.conf -o /mnt/d/dev_soft/goAccess/report.html --real-time-html --port=<span class="number">8888</span> --geoip-database=/mnt/d/dev_soft/goAccess/GeoLite2-City.mmdb</span><br></pre></td></tr></table></figure>
<h6 id="配置选项"><a href="#配置选项" class="headerlink" title="配置选项"></a>配置选项</h6><blockquote>
<p>GoAccess 拥有多个配置选项。获取完整的最新配置选项列表，请运行：./configure –help</p>
</blockquote>
<ul>
<li>–enable-debug<br>  使用调试标志编译且关闭编译器优化。</li>
<li>–enable-utf8<br>  宽字符支持。依赖 Ncursesw 模块。</li>
<li>–enable-geoip=&lt;legacy|mmdb&gt;<br>  地理位置支持。依赖 MaxMind GeoIP 模块。legacy 将使用原始 GeoIP 数据库。mmdb 将使用增强版 GeoIP2 数据库。</li>
<li>–enable-tcb=&lt;memhash|btree&gt;<br>  Tokyo Cabinet 存储支持。 memhash 将使用 Tokyo Cabinet 的内存哈希数据库。 btree 将使用 Tokyo Cabinet 的磁盘 B+Tree 数据库。</li>
<li>–disable-zlib<br>  禁止在 B+Tree 数据库上使用 zlib 压缩。</li>
<li>–disable-bzip<br>  禁止在 B+Tree 数据库上使用 bzip2 压缩。</li>
<li>–with-getline<br>  使用动态扩展行缓冲区用来解析完整的行请求，否则将使用固定大小(4096)的缓冲区。</li>
<li>–with-openssl<br>  使 GoAccess 与其 WebSocket 服务器之间的通信能够支持 OpenSSL。</li>
</ul>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat监控工具</title>
    <url>/2020/07/25/aEGAJiLzW/</url>
    <content><![CDATA[<blockquote>
<p> 作为系统管理员，要能监控系统状态，包括主机状态（硬盘、内存、CPU）和服务状态（GC、Thread）。如果没有工具，需要远程登录到服务器，费时费力。<br> 推荐一款工具Psi-probe，非常强大，可以监控Tomcat发布服务和主机的性能。</p>
</blockquote>
<p><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1589941600334.png" alt=""></p>
<h5 id="psi-probe安装"><a href="#psi-probe安装" class="headerlink" title="psi-probe安装"></a>psi-probe安装</h5><ul>
<li>下载源码，编译war。<br><a href="https://github.com/psi-probe/psi-probe" target="_blank" rel="noopener">https://github.com/psi-probe/psi-probe</a> </li>
<li>直接下载war<br><a href="https://github.com/psi-probe/psi-probe/releases/download/3.1.0/probe.war" target="_blank" rel="noopener">https://github.com/psi-probe/psi-probe/releases/download/3.1.0/probe.war</a> </li>
<li>安装probe.war。通过Tomcat Manager Deploy war，或者将probe.war放到Tomcat的webapps目录下。<h5 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h5>通过<a href="http://host/probe访问服务。" target="_blank" rel="noopener">http://host/probe访问服务。</a><br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1589941685911.png" alt=""></li>
</ul>
]]></content>
      <categories>
        <category>TOMCAT</category>
      </categories>
  </entry>
  <entry>
    <title>Hyper-V和IDEA运行端口占用问题</title>
    <url>/2020/07/25/fKDxWMjSW/</url>
    <content><![CDATA[<h4 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h4><p>首先我们可以查看一下我们系统默认的端口占用范围；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh <span class="keyword">int</span> ipv4 show dynamicport tcp</span><br><span class="line"></span><br><span class="line">Copy</span><br><span class="line">Microsoft Windows [版本 <span class="number">10.0</span><span class="number">.18363</span><span class="number">.752</span>]</span><br><span class="line">(c) <span class="number">2019</span> Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">netsh <span class="keyword">int</span> ipv4 show dynamicport tcp</span><br><span class="line"></span><br><span class="line">协议 tcp 动态端口范围</span><br><span class="line">---------------------------------</span><br><span class="line">启动端口        : <span class="number">1024</span></span><br><span class="line">端口数          : <span class="number">13977</span></span><br></pre></td></tr></table></figure>
<p>我们可以看到Windows系统默认的tcp 动态端口范围为：1024~13977。当我们开启Hyper-V后，系统默认会分配给一些保留端口供Hyper-V使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh <span class="class"><span class="keyword">interface</span> <span class="title">ipv4</span> <span class="title">show</span> <span class="title">excludedportrange</span> <span class="title">protocol</span></span>=tcp</span><br><span class="line">协议 tcp 端口排除范围</span><br><span class="line"> </span><br><span class="line">开始端口    结束端口</span><br><span class="line">----------    --------</span><br><span class="line">      <span class="number">1026</span>        <span class="number">1125</span></span><br><span class="line">      <span class="number">1226</span>        <span class="number">1325</span></span><br><span class="line">      <span class="number">1326</span>        <span class="number">1425</span></span><br><span class="line">      <span class="number">1426</span>        <span class="number">1525</span></span><br><span class="line">      <span class="number">1526</span>        <span class="number">1625</span></span><br><span class="line">      <span class="number">2180</span>        <span class="number">2279</span></span><br></pre></td></tr></table></figure>
<p>我们可以看到IDEA运行Tomcat需要JMX的1099端口刚好在端口排除范围中，这样就导致了IDEA需要使用1099端口是会被占用，这样你当然就不能运行了。</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>使用管理员身份运行cmd，重置端口，然后重启</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh winsock reset</span><br></pre></td></tr></table></figure>
<p>这样你的tcp端口排除范围可能刚好不包含1099端口，这样你当然就可以用你的IDEA运行Tomcat应用了。但是你啥时候会出现就不得而知了。</p>
<h4 id="终极解决"><a href="#终极解决" class="headerlink" title="终极解决"></a>终极解决</h4><p>3.1 关闭Hyper-V#</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Microsoft Windows [版本 <span class="number">10.0</span><span class="number">.18363</span><span class="number">.752</span>]</span><br><span class="line">(c) <span class="number">2019</span> Microsoft Corporation。保留所有权利。</span><br><span class="line">dism.exe /Online /Disable-Feature:Microsoft-Hyper-V</span><br></pre></td></tr></table></figure>
<p>或者采用传统方式，在控制面板的“程序和功能”中，找到“Windows功能”，取消Hyper-V的勾选。这两种方法都会要求重启。</p>
<p>3.2 修改动态端口范围#<br>使用管理员身份运行cmd</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh <span class="keyword">int</span> ipv4 set dynamicport tcp start=<span class="number">49152</span> num=<span class="number">16383</span></span><br><span class="line">netsh <span class="keyword">int</span> ipv4 set dynamicport udp start=<span class="number">49152</span> num=<span class="number">16383</span></span><br></pre></td></tr></table></figure>
<p>确定。<br>然后检查结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh <span class="keyword">int</span> ipv4 show dynamicport tcp</span><br><span class="line"></span><br><span class="line">协议 tcp 动态端口范围</span><br><span class="line">---------------------------------</span><br><span class="line">启动端口        : <span class="number">49152</span></span><br><span class="line">端口数          : <span class="number">16383</span></span><br></pre></td></tr></table></figure>
<p>3.3 开启Hyper-V#</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All</span><br><span class="line">部署映像服务和管理工具</span><br><span class="line">版本: <span class="number">10.0</span><span class="number">.18362</span><span class="number">.1</span></span><br><span class="line">映像版本: <span class="number">10.0</span><span class="number">.18363</span><span class="number">.752</span></span><br><span class="line">启用一个或多个功能</span><br><span class="line">[==========================<span class="number">100.0</span>%==========================]</span><br><span class="line">操作成功完成。</span><br><span class="line">重新启动 Windows 以完成该操作。</span><br><span class="line">是否立即重新启动计算机? (Y/N)</span><br><span class="line">开启Hyper-V</span><br></pre></td></tr></table></figure>
<p>或者采用传统方式，在控制面板的“程序和功能”中，找到“Windows功能”，取消Hyper-V的勾选。这两种方法都会要求重启。</p>
<blockquote>
<p>使用终极解决方案解决之后，你会发现你的IDEA又可以正常运行了。另外这里说一个单独排除端口的命令，后面可能会用到：</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">netsh <span class="keyword">int</span> ipv4 add excludedportrange protocol=tcp startport=<span class="number">50051</span> numberofports=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>使用上面的命令之后我们就可以单独排除某个端口了，保障改端口不会被其他应用占用。</p>
<blockquote>
<p><a href="https://www.kairlec.com/archives/285" target="_blank" rel="noopener">https://www.kairlec.com/archives/285</a><br><a href="https://www.cnblogs.com/eelve/p/12679125.html" target="_blank" rel="noopener">https://www.cnblogs.com/eelve/p/12679125.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
  </entry>
  <entry>
    <title>Springboot项目在cmd窗口运行后台卡顿问题</title>
    <url>/2020/07/25/kcMn5UKaj/</url>
    <content><![CDATA[<h3 id="1、背景介绍"><a href="#1、背景介绍" class="headerlink" title="1、背景介绍"></a>1、背景介绍</h3><p>项目使用Springboot开发，项目打成jar后，部署在windows环境下，通过命令：java -jar project.jar的方式启动运行。</p>
<h3 id="2、问题描述"><a href="#2、问题描述" class="headerlink" title="2、问题描述"></a>2、问题描述</h3><p>项目每次启动后，开始时可以正常访问。经过一段时间的运行，通过浏览器系统无法登陆，查看后台日志时，可以看到系统后台卡住，日志不再输出。在CMD窗口输入Ctrl + C，强制结束应用进程后，系统便能正常登录。</p>
<p>有时，在CMD窗口通过输入回车，后台会将之前卡住的日志全部刷出来，然后便能正常登录，但有时输入回车不起作用。</p>
<h3 id="3、问题追踪"><a href="#3、问题追踪" class="headerlink" title="3、问题追踪"></a>3、问题追踪</h3><p>当系统后台再次卡住，应用无法访问时，按照如下步骤进行排查定位：</p>
<ol>
<li>找到java_home的bin下jvisualvm.exe ，双击运行，即可看到下图界面；<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594706936975.png" alt=""></li>
<li>点击右侧<strong>“线程Dump”</strong>按钮，保存当前所有线程信息，保存为dump文件，可在左侧点击查看保存内容。<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594706975795.png" alt=""></li>
<li>在CMD窗口输入：Ctrl+C，强制结束应用线程；</li>
<li>如第二步操作，再次保存结束线程后，所有线程的快照。<h3 id="4、线程快照分析"><a href="#4、线程快照分析" class="headerlink" title="4、线程快照分析"></a>4、线程快照分析</h3></li>
<li>线程统计情况对比：<br>Ctrl+C执行前<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707048755.png" alt=""><br>Ctrl+C执行后<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707054231.png" alt=""></li>
<li>线程执行情况对比：<br>Ctrl+C执行前<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707066715.png" alt=""><br>Ctrl+C执行后<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707072491.png" alt=""></li>
<li>dump文件内容对比：<br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707097297.png" alt=""><br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1594707102232.png" alt=""><br>执行Ctrl+C线程状态变化的是QuartzScheduler_QuartzSchedulerThread，第二个线程挂起，在等待第一个线程；第一个线程在写日志，但一直处在Runnable状态。<br>结论：定时任务执行时，写日志输出IO阻塞，导致应用后台卡住。<h3 id="5、解决办法"><a href="#5、解决办法" class="headerlink" title="5、解决办法"></a>5、解决办法</h3></li>
<li>将springboot日志输出，修改为异步的方式输出，避免同步输出阻塞；</li>
<li>由于windows中cmd存在日志输出bug，导致经常性日志卡住，具体表现为：输出内容卡死问题（命令行卡死不动，但是进程和线程依然再运行），随便敲一下回车键，命令行会马上打印卡死期间输出的信息。这种情况，只需要对cmd窗口进行设置即可：右键窗口标题-属性，把快速编辑模式关掉就能避免这个问题。</li>
</ol>
<p>原文链接：<a href="https://blog.csdn.net/qq_40112386/java/article/details/86681247" target="_blank" rel="noopener">https://blog.csdn.net/qq_40112386/java/article/details/86681247</a></p>
]]></content>
      <categories>
        <category>问题</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat8优化实践</title>
    <url>/2020/07/25/Tked_OlVP/</url>
    <content><![CDATA[<blockquote>
<p>来源：<a href="https://www.jianshu.com/p/b2826ead1c4e" target="_blank" rel="noopener">https://www.jianshu.com/p/b2826ead1c4e</a></p>
</blockquote>
<h5 id="Tomcat8优化"><a href="#Tomcat8优化" class="headerlink" title="Tomcat8优化"></a>Tomcat8优化</h5><ol>
<li>Tomcat配置优化<ol>
<li>部署安装tomcat8<br>下载地址：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a><br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1590566733293.png" alt=""><br><img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1590566796727.webp" alt=""></li>
<li>禁用AJP连接<br>什么是AJP呢？<br>AJP（Apache JServer Protocol）<br>AJPv13协议是面向包的。WEB服务器和Servlet容器通过TCP连接来交互；为了节省Socket创建的昂贵代价，WEB服务器会<br>尝试维护一个永久TCP连接到servlet容器，并且在多个请求和响应周期过程会重用连接。</li>
</ol>
</li>
</ol>
<pre><code>1. </code></pre><ol>
<li>使用Apache JMeter进行测试</li>
</ol>
]]></content>
      <categories>
        <category>TOMCAT</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/07/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>SVN迁移GIT</title>
    <url>/2020/07/25/mkm2IT70s/</url>
    <content><![CDATA[<h4 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h4><ol>
<li>拉取svn代码并转为git（输入用户名密码） <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git svn clone   http:<span class="comment">//xxxx.com/project</span></span><br></pre></td></tr></table></figure>
 <img src= "/img/loading.gif" data-src="https://1557100211.github.io/post-images/1589770874769.png" alt=""></li>
<li>关联远程仓库(保证仓库是新建的并且没有任何提交)<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd project/</span><br><span class="line">git remote add origin http:<span class="comment">//xxxx.com/project</span></span><br></pre></td></tr></table></figure></li>
<li>提交<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>SVN</category>
      </categories>
  </entry>
  <entry>
    <title>Mybatis中tinyint(1)转化为boolean</title>
    <url>/2020/07/25/mybatis-zhong-tinyint1zhuan-hua-wei-boolean/</url>
    <content><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述:"></a>问题描述:</h4><p>使用Mybatis查询tinyint(1)字段数据,返回值为Map类型,那么tinyint(1)的数据默认会转化为boolean类型数据.</p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h4><ol>
<li>使用ifnull(column, 0)处理该字段,个人测试过可以;</li>
<li>在jdbcUrl添加参数: tinyInt1isBit=false（默认为true）；</li>
<li>避免使用长度为1的tinyint类型字段存储数字格式的数据;</li>
</ol>
]]></content>
      <categories>
        <category>MYBATIS</category>
      </categories>
  </entry>
  <entry>
    <title>IntelliJ IDEA必装插件</title>
    <url>/2020/07/25/sgUTJX1IO/</url>
    <content><![CDATA[<p>1</p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
  </entry>
  <entry>
    <title>Nexus从windows迁移至Linux</title>
    <url>/2020/07/25/sD6FTsLeh/</url>
    <content><![CDATA[<h4 id="下载nexus-linux包"><a href="#下载nexus-linux包" class="headerlink" title="下载nexus linux包"></a>下载nexus linux包</h4><p>官网下载地址：<a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">https://www.sonatype.com/download-oss-sonatype</a><br>将软件包上传至服务器–&gt;创建nexus目录 –&gt;创建用户–&gt;解压缩包–&gt;将原平台文件包迁移至nexus目录–&gt;授权–&gt;启动：</p>
<ol>
<li><p>创建用户</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># useradd nexus</span><br><span class="line"># id nexus</span><br><span class="line">uid=<span class="number">1002</span>(nexus) gid=<span class="number">1002</span>(nexus) groups=<span class="number">1002</span>(nexus)</span><br></pre></td></tr></table></figure></li>
<li><p>创建nexus目录</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># mkdir /usr/local/nexus</span><br></pre></td></tr></table></figure></li>
<li><p>解压缩包</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># tar xf nexus-3.13.0-01-unix.tar.gz -C /usr/local/nexus/</span><br></pre></td></tr></table></figure></li>
<li><p>将sonatype-work文件移走</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># mv sonatype-work /tmp</span><br></pre></td></tr></table></figure></li>
<li><p>到老平台将文件目录sonatype-work打包并传至新nexus服务器</p>
</li>
<li><p>授权</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># chown -R nexus.nexus /usr/lcaol/nexus/</span><br></pre></td></tr></table></figure></li>
<li><p>切换至nexus用户并启动nexus</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># su - nexus</span><br><span class="line">$ /usr/local/nexus/nexus-<span class="number">3.13</span><span class="number">.0</span>-<span class="number">01</span>/bin/nexus start</span><br></pre></td></tr></table></figure></li>
<li><p>查看是否启动成功</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># ps -ef|grep nexus</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>NEXUS</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS7配置nexus开机自启动</title>
    <url>/2020/07/25/tlHAvqFm6/</url>
    <content><![CDATA[<h4 id="新建nexus启动脚本"><a href="#新建nexus启动脚本" class="headerlink" title="新建nexus启动脚本"></a>新建nexus启动脚本</h4><p>进入/etc/init.d目录，新建脚本文件nexus</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进入/etc/init.d</span></span><br><span class="line">[root@linux_maven etc]# cd /etc/init.d/</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 新建脚本文件nexus</span></span><br><span class="line">[root@linux_maven init.d]# vim nexus</span><br></pre></td></tr></table></figure>
<p>脚本内容:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#chkconfig:2345 20 90</span><br><span class="line">#description:nexus</span><br><span class="line">#processname:nexus</span><br><span class="line"> </span><br><span class="line">export JAVA_HOME=/root/apps/jdk1<span class="number">.8</span>/</span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> $<span class="number">1</span> in</span><br><span class="line">        start) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus start;;</span><br><span class="line">        stop) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus stop;;</span><br><span class="line">        status) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus status;;</span><br><span class="line">        restart) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus restart;;</span><br><span class="line">        dump) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus dump;;</span><br><span class="line">        console) su root /usr/local/nexus3<span class="number">.21</span>/bin/nexus console;;</span><br><span class="line">        *) echo <span class="string">"Usage: nexus &#123;start|stop|run|run-redirect|status|restart|force-reload&#125;"</span></span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<h4 id="设置脚本权限"><a href="#设置脚本权限" class="headerlink" title="设置脚本权限"></a>设置脚本权限</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">[root@linux_maven init.d]# chmod +x /etc/init.d/nexus</span><br></pre></td></tr></table></figure>
<h4 id="使用service命令使用nexus"><a href="#使用service命令使用nexus" class="headerlink" title="使用service命令使用nexus"></a>使用service命令使用nexus</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[root@linux_maven init.d]# service nexus status</span><br><span class="line"></span><br><span class="line">WARNING: ************************************************************</span><br><span class="line"></span><br><span class="line">WARNING: Detected execution as <span class="string">"root"</span> user.  This is NOT recommended!</span><br><span class="line"></span><br><span class="line">WARNING: ************************************************************</span><br><span class="line"></span><br><span class="line">nexus is running.</span><br></pre></td></tr></table></figure>
<h4 id="添加到开机启动"><a href="#添加到开机启动" class="headerlink" title="添加到开机启动#"></a>添加到开机启动#</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">[root@linux_maven init.d]# chkconfig nexus on</span><br></pre></td></tr></table></figure>
<h4 id="查看nexus开机启动"><a href="#查看nexus开机启动" class="headerlink" title="查看nexus开机启动"></a>查看nexus开机启动</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[root@linux_maven ~]# chkconfig --list nexus</span><br><span class="line"></span><br><span class="line">Note: This output shows SysV services only and does not include <span class="keyword">native</span></span><br><span class="line">      systemd services. SysV configuration data might be overridden by <span class="keyword">native</span></span><br><span class="line">      systemd configuration.</span><br><span class="line"> </span><br><span class="line">      If you want to list systemd services use <span class="string">'systemctl list-unit-files'</span>.</span><br><span class="line">      To see services enabled on particular target use</span><br><span class="line">      <span class="string">'systemctl list-dependencies [target]'</span>.</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">nexus           <span class="number">0</span>:off   <span class="number">1</span>:off   <span class="number">2</span>:on    <span class="number">3</span>:on    <span class="number">4</span>:on    <span class="number">5</span>:on    <span class="number">6</span>:off</span><br></pre></td></tr></table></figure>
<h4 id="设置防火墙"><a href="#设置防火墙" class="headerlink" title="设置防火墙"></a>设置防火墙</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进入防火墙设置文件目录</span></span><br><span class="line">[root@linux_maven init.d]# cd /etc/firewalld/zones/</span><br><span class="line"><span class="comment">// 使用vim, 修改防火墙配置文件</span></span><br><span class="line">[root@linux_maven zones]# vim public.xml</span><br></pre></td></tr></table></figure>
<p>添加以下放开端口内容, 其它不变</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;rule family=<span class="string">"ipv4"</span>&gt;</span><br><span class="line">&lt;!-- 开放<span class="number">8081</span>端口给任意ip  --&gt;</span><br><span class="line">　　&lt;port protocol=<span class="string">"tcp"</span> port=<span class="string">"8081"</span>/&gt;</span><br><span class="line">　　&lt;accept/&gt;</span><br><span class="line">&lt;/rule&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NEXUS</category>
      </categories>
  </entry>
  <entry>
    <title>第一篇</title>
    <url>/2020/07/25/%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
    <content><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>这是一篇<code>测试</code>文章</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">set nocompatible</span><br><span class="line">source $VIMRUNTIME/vimrc_example.vim</span><br><span class="line"><span class="string">"source $VIMRUNTIME/mswin.vim</span></span><br><span class="line"><span class="string">"</span>behave mswin</span><br><span class="line"> </span><br><span class="line">set diffexpr=MyDiff()</span><br><span class="line"><span class="function">function <span class="title">MyDiff</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  let opt </span>= <span class="string">'-a --binary '</span></span><br><span class="line">  <span class="keyword">if</span> &amp;diffopt =~ <span class="string">'icase'</span> | let opt = opt . <span class="string">'-i '</span> | endif</span><br><span class="line">  <span class="keyword">if</span> &amp;diffopt =~ <span class="string">'iwhite'</span> | let opt = opt . <span class="string">'-b '</span> | endif</span><br><span class="line">  let arg1 = v:fname_in</span><br><span class="line">  <span class="keyword">if</span> arg1 =~ <span class="string">' '</span> | let arg1 = <span class="string">'"'</span> . arg1 . <span class="string">'"'</span> | endif</span><br><span class="line">  let arg2 = v:fname_new</span><br><span class="line">  <span class="keyword">if</span> arg2 =~ <span class="string">' '</span> | let arg2 = <span class="string">'"'</span> . arg2 . <span class="string">'"'</span> | endif</span><br><span class="line">  let arg3 = v:fname_out</span><br><span class="line">  <span class="keyword">if</span> arg3 =~ <span class="string">' '</span> | let arg3 = <span class="string">'"'</span> . arg3 . <span class="string">'"'</span> | endif</span><br><span class="line">  let eq = <span class="string">''</span></span><br><span class="line">  <span class="keyword">if</span> $VIMRUNTIME =~ <span class="string">' '</span></span><br><span class="line">    <span class="keyword">if</span> &amp;sh =~ <span class="string">'\&lt;cmd'</span></span><br><span class="line">      let cmd = <span class="string">'""'</span> . $VIMRUNTIME . <span class="string">'\diff"'</span></span><br><span class="line">      let eq = <span class="string">'"'</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      let cmd = substitute($VIMRUNTIME, <span class="string">' '</span>, <span class="string">'" '</span>, <span class="string">''</span>) . <span class="string">'\diff"'</span></span><br><span class="line">    endif</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    let cmd = $VIMRUNTIME . <span class="string">'\diff'</span></span><br><span class="line">  endif</span><br><span class="line">  silent execute <span class="string">'!'</span> . cmd . <span class="string">' '</span> . opt . arg1 . <span class="string">' '</span> . arg2 . <span class="string">' &gt; '</span> . arg3 . eq</span><br><span class="line">endfunction</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">"设置文件的代码形式 utf8</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string">set termencoding=utf-8</span></span><br><span class="line"><span class="string">set fileencoding=utf-8</span></span><br><span class="line"><span class="string">set fileencodings=ucs-bom,utf-8,chinese,cp936</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">"</span>vim的菜单乱码解决</span><br><span class="line">source $VIMRUNTIME/delmenu.vim</span><br><span class="line">source $VIMRUNTIME/menu.vim</span><br><span class="line"> </span><br><span class="line"><span class="string">"vim提示信息乱码的解决</span></span><br><span class="line"><span class="string">language messages zh_CN.utf-8</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">filetype on</span></span><br><span class="line"><span class="string">filetype plugin indent on</span></span><br><span class="line"><span class="string">"</span>colorscheme evening	<span class="string">"配色方案</span></span><br><span class="line"><span class="string">colorscheme desert</span></span><br><span class="line"><span class="string">set helplang=cn		"</span>设置中文帮助</span><br><span class="line">set history=<span class="number">500</span>		<span class="string">"保留历史记录</span></span><br><span class="line"><span class="string">set guifont=Monaco:h10	"</span>设置字体为Monaco，大小<span class="number">10</span></span><br><span class="line">set tabstop=<span class="number">4</span>		<span class="string">"设置tab的跳数</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string">set backspace=2 	"</span>设置退格键可用</span><br><span class="line"><span class="string">"set nu! 		"</span>设置显示行号</span><br><span class="line">set wrap 		<span class="string">"设置自动换行</span></span><br><span class="line"><span class="string">"</span>set nowrap 		<span class="string">"设置不自动换行</span></span><br><span class="line"><span class="string">set linebreak 		"</span>整词换行，与自动换行搭配使用</span><br><span class="line"><span class="string">"set list 		"</span>显示制表符</span><br><span class="line">set autochdir 		<span class="string">"自动设置当前目录为正在编辑的目录</span></span><br><span class="line"><span class="string">set hidden 		"</span>自动隐藏没有保存的缓冲区，切换buffer时不给出保存当前buffer的提示</span><br><span class="line">set scrolloff=<span class="number">5</span> 	<span class="string">"在光标接近底端或顶端时，自动下滚或上滚</span></span><br><span class="line"><span class="string">"</span>Toggle Menu and Toolbar 	<span class="string">"隐藏菜单栏和工具栏</span></span><br><span class="line"><span class="string">"</span>set guioptions-=m</span><br><span class="line"><span class="string">"set guioptions-=T</span></span><br><span class="line"><span class="string">set showtabline=2 	"</span>设置显是显示标签栏</span><br><span class="line">set autoread 		<span class="string">"设置当文件在外部被修改，自动更新该文件</span></span><br><span class="line"><span class="string">set tabstop=4         </span></span><br><span class="line"><span class="string">set softtabstop=4     </span></span><br><span class="line"><span class="string">set shiftwidth=4     </span></span><br><span class="line"><span class="string">set expandtab       </span></span><br><span class="line"><span class="string">set mouse=a 		"</span>设置在任何模式下鼠标都可用</span><br><span class="line">set nobackup 		<span class="string">"设置不生成备份文件</span></span><br><span class="line"><span class="string">"</span>set go=				<span class="string">"不要图形按钮</span></span><br><span class="line"><span class="string">set guioptions-=T           "</span> 隐藏工具栏</span><br><span class="line"><span class="string">"set guioptions-=m           "</span> 隐藏菜单栏</span><br><span class="line"> </span><br><span class="line"><span class="string">"===========================</span></span><br><span class="line"><span class="string">"</span>查找/替换相关的设置</span><br><span class="line"><span class="string">"===========================</span></span><br><span class="line"><span class="string">set hlsearch "</span>高亮显示查找结果</span><br><span class="line">set incsearch <span class="string">"增量查找</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">"</span>===========================</span><br><span class="line"><span class="string">"状态栏的设置</span></span><br><span class="line"><span class="string">"</span>===========================</span><br><span class="line">set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%] <span class="string">"显示文件名：总行数，总的字符数</span></span><br><span class="line"><span class="string">set ruler "</span>在编辑过程中，在右下角显示光标位置的状态行</span><br><span class="line"> </span><br><span class="line"><span class="string">"===========================</span></span><br><span class="line"><span class="string">"</span>代码设置</span><br><span class="line"><span class="string">"===========================</span></span><br><span class="line"><span class="string">syntax enable "</span>打开语法高亮</span><br><span class="line">syntax on <span class="string">"打开语法高亮</span></span><br><span class="line"><span class="string">set showmatch "</span>设置匹配模式，相当于括号匹配</span><br><span class="line">set smartindent <span class="string">"智能对齐</span></span><br><span class="line"><span class="string">"</span>set shiftwidth=<span class="number">4</span> <span class="string">"换行时，交错使用4个空格</span></span><br><span class="line"><span class="string">set autoindent "</span>设置自动对齐</span><br><span class="line">set ai! <span class="string">"设置自动缩进</span></span><br><span class="line"><span class="string">"</span>set cursorcolumn <span class="string">"启用光标列</span></span><br><span class="line"><span class="string">"</span>set cursorline <span class="string">"设置高亮当前行(这里我注释了)</span></span><br><span class="line"><span class="string">hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white</span></span><br><span class="line"><span class="string">set guicursor+=a:blinkon0 "</span>设置光标不闪烁</span><br><span class="line">set fdm=indent <span class="string">"</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">"</span> 关闭NERDTree快捷键</span><br><span class="line">map &lt;leader&gt;t :NERDTreeToggle&lt;CR&gt;</span><br><span class="line"><span class="string">" 显示行号</span></span><br><span class="line"><span class="string">let NERDTreeShowLineNumbers=1</span></span><br><span class="line"><span class="string">let NERDTreeAutoCenter=1</span></span><br><span class="line"><span class="string">"</span> 是否显示隐藏文件</span><br><span class="line">let NERDTreeShowHidden=<span class="number">1</span></span><br><span class="line"><span class="string">" 设置宽度</span></span><br><span class="line"><span class="string">let NERDTreeWinSize=21</span></span><br><span class="line"><span class="string">"</span> 在终端启动vim时，共享NERDTree</span><br><span class="line">let g:nerdtree_tabs_open_on_console_startup=<span class="number">1</span></span><br><span class="line"><span class="string">" 忽略一下文件的显示</span></span><br><span class="line"><span class="string">let NERDTreeIgnore=['\.pyc','\~$','\.swp']</span></span><br><span class="line"><span class="string">"</span> 显示书签列表</span><br><span class="line">let NERDTreeShowBookmarks=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">inoremap &#123; &#123;&#125;&lt;ESC&gt;i </span><br><span class="line">hi MatchParen ctermbg=DarkRed guibg=lightblue  </span><br><span class="line">set clipboard=unnamed</span><br><span class="line">set number </span><br><span class="line">set smartindent</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>优秀源码推荐</title>
    <url>/2020/07/25/you-xiu-yuan-ma-tui-jian/</url>
    <content><![CDATA[<p>工程</p>
]]></content>
      <categories>
        <category>CODE</category>
      </categories>
  </entry>
</search>
